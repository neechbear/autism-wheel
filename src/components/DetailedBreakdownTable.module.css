/*
 * ⚠️  IMPORTANT CSS RULES FOR AI AGENTS ⚠️
 *
 * 1. NEVER use CSS !important declarations except for:
 *    - Completely hiding elements (display: none !important)
 *    - Print media styles (for paper printing)
 *
 * 2. NEVER use inline style="" attributes on HTML elements
 *    - All styling MUST be via dedicated CSS files
 *    - Use CSS Modules for component-specific styles
 *    - Use global.css for shared design tokens
 *
 * Violation of these rules is STRICTLY FORBIDDEN.
 */

/* DetailedBreakdownTable Component Styles - Following CSS Modules pattern */

.container {
  margin-bottom: var(--spacing-xl); /* Add bottom spacing under the table */
}

.title {
  text-align: center;
  color: var(--color-text-primary);
  margin-bottom: 0; /* Override global h2 margin-bottom */
  /* Font size, weight, and line-height inherited from global h2 styles */
}

.tableContainer {
  width: 100%;
  max-width: 48rem; /* Match intro paragraph width */
  margin: 0 auto;
  overflow: auto;
}

.table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

.tableHeader {
  border-bottom: 1px solid rgba(128, 128, 128, 0.5); /* 50% grey horizontal dividing line */
}

.tableRow {
  border-bottom: 1px solid rgba(128, 128, 128, 0.5); /* 50% grey horizontal dividing line */
  transition: background-color 0.2s ease;
}

.tableRow:last-child {
  border-bottom: none; /* Remove border from last row */
}

.tableRow:hover {
  background-color: rgba(128, 128, 128, 0.08); /* Faint grey highlight for light theme */
}

/* Dark theme hover effect */
.dark .tableRow:hover {
  background-color: rgba(255, 255, 255, 0.05); /* Faint light highlight for dark theme */
}

.tableCell {
  padding: var(--spacing-sm) var(--spacing-md);
  text-align: left;
  vertical-align: top;
}

.tableHead {
  padding: var(--spacing-sm) var(--spacing-md);
  text-align: left;
  font-weight: var(--font-weight-medium);
  color: var(--color-text-secondary);
  background-color: var(--color-surface);
  vertical-align: bottom;
}

.sortableHeader {
  cursor: pointer;
  user-select: none;
  transition: background-color 0.2s ease;
}

.sortableHeader:hover {
  background-color: rgba(128, 128, 128, 0.1);
}

.headerContent {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  gap: var(--spacing-sm);
  min-height: 2.5rem;
}

.headerContentCategory {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  gap: var(--spacing-sm);
  min-height: 2.5rem;
  /* Align with category content - icon size (2.7rem) + gap (0.5rem) */
  padding-left: 3.2rem;
}

.headerContentCenter {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  gap: var(--spacing-sm);
  min-height: 2.5rem;
}

.multiLineHeader {
  text-align: center;
  line-height: 1.2;
}

.sortIcon {
  width: 1rem;
  height: 1rem;
  color: var(--color-text-secondary);
  flex-shrink: 0;
}

.sortIconPlaceholder {
  width: 1rem;
  height: 1rem;
  flex-shrink: 0;
}

.tableCellCenter {
  text-align: center;
  vertical-align: top;
}

/* Icon cell with larger emoji size */
.iconCell {
  font-size: 2.7rem;
  line-height: 1;
  flex-shrink: 0;
}

/* Category container and layout */
.categoryContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.categoryRow {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
}

.categoryContent {
  min-width: 0;
  flex: 1;
}

/* Impact value container */
.impactContainer {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.categoryName {
  font-weight: var(--font-weight-medium);
  color: var(--foreground);
}

.categoryDescription {
  color: var(--muted-foreground);
  font-size: var(--font-size-sm);
  line-height: 1.4;
  margin-top: var(--spacing-xs);
}

.impactCell {
  text-align: center;
  vertical-align: top;
  padding: var(--spacing-sm);
  min-width: 10rem; /* Reduced width since "Needs" is on separate line */
}

.impactCell > div {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.impactValue {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  border: 1px solid var(--border);
  border-radius: 0.5rem;
  font-weight: var(--font-weight-semibold);
  font-size: var(--font-size-base);
  color: white; /* White text for visibility on colored backgrounds */
  margin-bottom: 0.25rem;
}

.emptyImpactValue {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  background-color: var(--muted);
  color: var(--muted-foreground);
  border: 1px solid var(--border);
  border-radius: 0.5rem;
  font-weight: var(--font-weight-semibold);
  font-size: var(--font-size-base);
}

.selectionValue {
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
}

.emptyState {
  color: var(--color-text-secondary);
  font-style: italic;
}

/* Clickable impact values */
.clickableValue {
  cursor: pointer;
  transition: opacity var(--transition-fast);
}

.clickableValue:hover {
  opacity: 0.8;
}

/* Edit input styling */
.editInput {
  width: 2.5rem;
  height: 2.5rem;
  text-align: center;
  border: 2px solid var(--color-primary);
  border-radius: 0.5rem;
  color: var(--color-text-primary);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-semibold);
  margin-bottom: 0.25rem;
}

/* Hide default webkit spinners so we can create custom ones */
.editInput::-webkit-outer-spin-button,
.editInput::-webkit-inner-spin-button {
  -webkit-appearance: none;
  appearance: none;
  margin: 0;
}

/* Hover effects for spinner buttons */
.editInput::-webkit-inner-spin-button:hover,
.editInput::-webkit-outer-spin-button:hover {
  background: transparent;
}

/* Hide default number input appearance */
.editInput[type="number"] {
  /* Hide default spinners */
  appearance: textfield;
  -moz-appearance: textfield;
  position: relative;
}

/* Custom spinner container */
.numberInputContainer {
  position: relative;
  display: inline-flex;
  align-items: center;
  gap: 4px;
}

/* Custom spinner buttons positioned outside the input */
.spinnerButton {
  width: 24px;
  height: calc(2.5rem - 4px); /* Match input height minus borders */
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  font-size: 14px;
  font-weight: bold;
  position: relative;
  /* Match the input colors exactly */
  background-color: var(--spinner-bg, currentColor);
  color: var(--spinner-text-color, white);
}

.spinnerButton:hover {
  transform: scale(1.1);
  filter: brightness(0.9);
}

/* Left triangle for minus button */
.spinnerButtonDown {
  clip-path: polygon(0% 50%, 100% 0%, 100% 100%);
  border-radius: 4px 0 0 4px;
}

/* Right triangle for plus button */
.spinnerButtonUp {
  clip-path: polygon(0% 0%, 100% 50%, 0% 100%);
  border-radius: 0 4px 4px 0;
}

/* Button content styling */
.spinnerButton::before {
  content: attr(data-symbol);
  font-size: 12px;
  font-weight: bold;
  line-height: 1;
}

/* Custom Firefox spinner implementation */
.editInput[type="number"]::-moz-number-spin-box {
  display: flex;
  flex-direction: column;
  width: 20px;
  height: 100%;
  background: transparent;
  border: none;
}

.editInput[type="number"]::-moz-number-spin-up,
.editInput[type="number"]::-moz-number-spin-down {
  background: transparent;
  border: none;
  color: currentColor;
  cursor: pointer;
  opacity: 1;
  width: 100%;
  height: 50%;
}

.editInput:focus {
  outline: none;
  border-color: var(--color-ring);
  box-shadow: 0 0 0 2px var(--color-ring-offset);
}

/* Print-specific styles */
@media print {
  .container {
    margin-top: var(--spacing-md);
    break-inside: avoid;
  }

  .title {
    font-size: 1.25rem;
    margin-bottom: var(--spacing-sm);
  }

  .tableRow:hover {
    background-color: transparent;
  }
}